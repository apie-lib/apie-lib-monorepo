{
    "openapi": "3.0.1",
    "info": {
        "title": "Apie-lib generated OpenAPI spec",
        "version": "1.0.0"
    },
    "paths": {
        "/Order/dropdown-options/{property}": {
            "post": {
                "tags": [
                    "Order"
                ],
                "description": "Returns dropdown options for a specific input",
                "operationId": "cms.dropdown_options.Order",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "description": "property of instance of PartialInput",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PartialInput-post"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PartialInput-post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DropdownOptionList-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Animal/dropdown-options/{property}": {
            "post": {
                "tags": [
                    "Animal"
                ],
                "description": "Returns dropdown options for a specific input",
                "operationId": "cms.dropdown_options.Animal",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "description": "property of instance of PartialInput",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PartialInput-post"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PartialInput-post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DropdownOptionList-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PrimitiveOnly/dropdown-options/{property}": {
            "post": {
                "tags": [
                    "PrimitiveOnly"
                ],
                "description": "Returns dropdown options for a specific input",
                "operationId": "cms.dropdown_options.PrimitiveOnly",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "description": "property of instance of PartialInput",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PartialInput-post"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PartialInput-post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DropdownOptionList-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/User/dropdown-options/{property}": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Returns dropdown options for a specific input",
                "operationId": "cms.dropdown_options.User",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "description": "property of instance of PartialInput",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PartialInput-post"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PartialInput-post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DropdownOptionList-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Animal/{id}/dropdown-options/{property}": {
            "post": {
                "tags": [
                    "Animal"
                ],
                "description": "Returns dropdown options for a specific input",
                "operationId": "cms.dropdown_options.existing.Animal",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of PartialInput",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PartialInput-post"
                        }
                    },
                    {
                        "name": "property",
                        "in": "path",
                        "description": "property of instance of PartialInput",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PartialInput-post"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PartialInput-post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DropdownOptionList-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PrimitiveOnly/{id}/dropdown-options/{property}": {
            "post": {
                "tags": [
                    "PrimitiveOnly"
                ],
                "description": "Returns dropdown options for a specific input",
                "operationId": "cms.dropdown_options.existing.PrimitiveOnly",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of PartialInput",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PartialInput-post"
                        }
                    },
                    {
                        "name": "property",
                        "in": "path",
                        "description": "property of instance of PartialInput",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PartialInput-post"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PartialInput-post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DropdownOptionList-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/User/{id}/dropdown-options/{property}": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Returns dropdown options for a specific input",
                "operationId": "cms.dropdown_options.existing.User",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of PartialInput",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PartialInput-post"
                        }
                    },
                    {
                        "name": "property",
                        "in": "path",
                        "description": "property of instance of PartialInput",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PartialInput-post"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PartialInput-post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DropdownOptionList-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Order": {
            "post": {
                "tags": [
                    "Order",
                    "resource"
                ],
                "description": "Creates an instance of Order",
                "operationId": "post-Order",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order-post"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Resource was created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order-get"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Order",
                    "resource"
                ],
                "description": "Gets a list of resource that are an instance of Order",
                "operationId": "get-all-Order",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "totalCount",
                                        "first",
                                        "last",
                                        "list"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "totalCount": {
                                            "type": "integer"
                                        },
                                        "first": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "last": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "prev": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order-get"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "query[id]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query[orderLineList]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/Animal": {
            "post": {
                "tags": [
                    "Animal",
                    "resource"
                ],
                "description": "Creates an instance of Animal",
                "operationId": "post-Animal",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Animal-post"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Resource was created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal-get"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Animal",
                    "resource"
                ],
                "description": "Gets a list of resource that are an instance of Animal",
                "operationId": "get-all-Animal",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "totalCount",
                                        "first",
                                        "last",
                                        "list"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "totalCount": {
                                            "type": "integer"
                                        },
                                        "first": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "last": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "prev": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Animal-get"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "query[id]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query[animalName]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/PrimitiveOnly": {
            "post": {
                "tags": [
                    "PrimitiveOnly",
                    "resource"
                ],
                "description": "Creates an instance of PrimitiveOnly",
                "operationId": "post-PrimitiveOnly",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PrimitiveOnly-post"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Resource was created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PrimitiveOnly-get"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "PrimitiveOnly",
                    "resource"
                ],
                "description": "Gets a list of resource that are an instance of PrimitiveOnly",
                "operationId": "get-all-PrimitiveOnly",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "totalCount",
                                        "first",
                                        "last",
                                        "list"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "totalCount": {
                                            "type": "integer"
                                        },
                                        "first": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "last": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "prev": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PrimitiveOnly-get"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "query[stringField]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "query[integerField]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "query[floatingPoint]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "query[booleanField]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "query[id]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/User": {
            "post": {
                "tags": [
                    "User",
                    "resource"
                ],
                "description": "Creates an instance of User",
                "operationId": "post-User",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User-post"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Resource was created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-get"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "User",
                    "resource"
                ],
                "description": "Gets a list of resource that are an instance of User",
                "operationId": "get-all-User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "totalCount",
                                        "first",
                                        "last",
                                        "list"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "totalCount": {
                                            "type": "integer"
                                        },
                                        "first": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "last": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "prev": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User-get"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "query[phoneNumber]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "query[blockedReason]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "query[id]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/Animal/{id}": {
            "get": {
                "tags": [
                    "Animal",
                    "resource"
                ],
                "description": "Gets a resource of Animal with a specific id",
                "operationId": "get-single-Animal",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of Animal",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/AnimalIdentifier-post"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal-get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Animal",
                    "resource"
                ],
                "description": "Modifies an instance of Animal",
                "operationId": "patch-single-Animal",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of Animal",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/AnimalIdentifier-post"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Animal-patch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal-get"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Order/{id}": {
            "get": {
                "tags": [
                    "Order",
                    "resource"
                ],
                "description": "Gets a resource of Order with a specific id",
                "operationId": "get-single-Order",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of Order",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/OrderIdentifier-post"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order-get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Order",
                    "resource"
                ],
                "description": "Removes an instance of Order",
                "operationId": "remove-single-Order",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of Order",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/OrderIdentifier-post"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was deleted"
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PrimitiveOnly/{id}": {
            "get": {
                "tags": [
                    "PrimitiveOnly",
                    "resource"
                ],
                "description": "Gets a resource of PrimitiveOnly with a specific id",
                "operationId": "get-single-PrimitiveOnly",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of PrimitiveOnly",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PrimitiveOnlyIdentifier-post"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PrimitiveOnly-get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "PrimitiveOnly",
                    "resource"
                ],
                "description": "Modifies an instance of PrimitiveOnly",
                "operationId": "patch-single-PrimitiveOnly",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of PrimitiveOnly",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PrimitiveOnlyIdentifier-post"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PrimitiveOnly-patch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PrimitiveOnly-get"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "PrimitiveOnly",
                    "resource"
                ],
                "description": "Removes an instance of PrimitiveOnly",
                "operationId": "remove-single-PrimitiveOnly",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of PrimitiveOnly",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PrimitiveOnlyIdentifier-post"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was deleted"
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/User/{id}": {
            "get": {
                "tags": [
                    "User",
                    "resource"
                ],
                "description": "Gets a resource of User with a specific id",
                "operationId": "get-single-User",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of User",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UserIdentifier-post"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "User",
                    "resource"
                ],
                "description": "Modifies an instance of User",
                "operationId": "patch-single-User",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of User",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UserIdentifier-post"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User-patch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-get"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calc/{numberOne}/plus/{numberTwo}": {
            "post": {
                "tags": [
                    "Calculator",
                    "action"
                ],
                "description": "Calls method add and returns return value.",
                "operationId": "call-method-Calculator-add",
                "parameters": [
                    {
                        "name": "numberOne",
                        "in": "path",
                        "description": "numberOne of instance of add",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "numberTwo",
                        "in": "path",
                        "description": "numberTwo of instance of add",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "tags": [
                    "Authentication",
                    "action"
                ],
                "description": "Calls method currentUser and returns return value.",
                "operationId": "call-method-Authentication-currentUser",
                "responses": {
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Entity-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calc/{numberOne}/times/{numberTwo}": {
            "post": {
                "tags": [
                    "Calculator",
                    "action"
                ],
                "description": "Calls method multiply and returns return value.",
                "operationId": "call-method-Calculator-multiply",
                "parameters": [
                    {
                        "name": "numberOne",
                        "in": "path",
                        "description": "numberOne of instance of multiply",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "numberTwo",
                        "in": "path",
                        "description": "numberTwo of instance of multiply",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Authentication/verifyAuthentication": {
            "post": {
                "tags": [
                    "Authentication",
                    "action"
                ],
                "description": "Calls method verifyAuthentication and returns return value.",
                "operationId": "call-method-Authentication-verifyAuthentication",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-nullable-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Order/{id}/orderLine": {
            "post": {
                "tags": [
                    "Order",
                    "action"
                ],
                "description": "Adds orderLine to Order",
                "operationId": "get-single-Order-run-addOrderLine",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of Order",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/OrderIdentifier-post"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "orderLine"
                                ],
                                "type": "object",
                                "properties": {
                                    "orderLine": {
                                        "$ref": "#/components/schemas/OrderLine-post"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order-get"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/User/{id}/block": {
            "post": {
                "tags": [
                    "User",
                    "action"
                ],
                "description": "Runs method block on a User with a specific id",
                "operationId": "get-single-User-run-block",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of User",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UserIdentifier-post"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "blockedReason"
                                ],
                                "type": "object",
                                "properties": {
                                    "blockedReason": {
                                        "$ref": "#/components/schemas/DatabaseText-post"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-get"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/User/{id}/unblock": {
            "get": {
                "tags": [
                    "User",
                    "action"
                ],
                "description": "Runs method unblock on a User with a specific id",
                "operationId": "get-single-User-run-unblock",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of User",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UserIdentifier-post"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/User/{id}/activate": {
            "post": {
                "tags": [
                    "User",
                    "action"
                ],
                "description": "Runs method activate on a User with a specific id",
                "operationId": "get-single-User-run-activate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of User",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UserIdentifier-post"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "activationToken",
                                    "newPassword",
                                    "repeat"
                                ],
                                "type": "object",
                                "properties": {
                                    "activationToken": {
                                        "type": "string"
                                    },
                                    "newPassword": {
                                        "$ref": "#/components/schemas/StrongPassword-post"
                                    },
                                    "repeat": {
                                        "$ref": "#/components/schemas/StrongPassword-post"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-get"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/User/{id}/verify": {
            "post": {
                "tags": [
                    "User",
                    "action"
                ],
                "description": "Runs method verify on a User with a specific id",
                "operationId": "get-single-User-run-verify",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of User",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UserIdentifier-post"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password"
                                ],
                                "type": "object",
                                "properties": {
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "/api/types"
        },
        {
            "url": "http://localhost//api/types"
        }
    ],
    "components": {
        "schemas": {
            "Animal-get": {
                "type": "object",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Mammal-get"
                    },
                    {
                        "$ref": "#/components/schemas/Bird-get"
                    },
                    {
                        "$ref": "#/components/schemas/Fish-get"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "mammal": "#/components/schemas/Mammal-get",
                        "bird": "#/components/schemas/Bird-get",
                        "fish": "#/components/schemas/Fish-get"
                    }
                }
            },
            "Animal-patch": {
                "type": "object",
                "properties": {
                    "animalName": {
                        "$ref": "#/components/schemas/FirstName-post"
                    }
                }
            },
            "Animal-post": {
                "type": "object",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Mammal-post"
                    },
                    {
                        "$ref": "#/components/schemas/Bird-post"
                    },
                    {
                        "$ref": "#/components/schemas/Fish-post"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "mammal": "#/components/schemas/Mammal-post",
                        "bird": "#/components/schemas/Bird-post",
                        "fish": "#/components/schemas/Fish-post"
                    }
                }
            },
            "AnimalIdentifier-get": {
                "type": "string",
                "format": "animalidentifier",
                "pattern": "^[a-f0-9]{8}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{12}$"
            },
            "AnimalIdentifier-post": {
                "type": "string",
                "format": "animalidentifier",
                "pattern": "^[a-f0-9]{8}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{12}$"
            },
            "Bird-get": {
                "type": "object",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Ostrich-get"
                    },
                    {
                        "$ref": "#/components/schemas/Seagull-get"
                    }
                ],
                "discriminator": {
                    "propertyName": "name",
                    "mapping": {
                        "ostrich": "#/components/schemas/Ostrich-get",
                        "seagull": "#/components/schemas/Seagull-get"
                    }
                },
                "properties": {
                    "type": {
                        "enum": [
                            "bird"
                        ],
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "Bird-post": {
                "type": "object",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Ostrich-post"
                    },
                    {
                        "$ref": "#/components/schemas/Seagull-post"
                    }
                ],
                "discriminator": {
                    "propertyName": "name",
                    "mapping": {
                        "ostrich": "#/components/schemas/Ostrich-post",
                        "seagull": "#/components/schemas/Seagull-post"
                    }
                },
                "properties": {
                    "type": {
                        "enum": [
                            "bird"
                        ],
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "DatabaseText-nullable-get": {
                "maxLength": 65535,
                "minLength": 0,
                "type": "string",
                "example": "Lorem Ipsum",
                "nullable": true
            },
            "DatabaseText-post": {
                "maxLength": 65535,
                "minLength": 0,
                "type": "string",
                "example": "Lorem Ipsum"
            },
            "DropdownOption-post": {
                "type": "object",
                "required": [
                    "value",
                    "displayValue"
                ],
                "properties": {
                    "value": {
                        "type": "string",
                        "nullable": false
                    },
                    "displayValue": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "DropdownOptionList-get": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/DropdownOption-post"
                }
            },
            "DutchPhoneNumber-nullable-get": {
                "type": "string",
                "format": "dutchphonenumber",
                "nullable": true
            },
            "DutchPhoneNumber-nullable-post": {
                "type": "string",
                "format": "dutchphonenumber",
                "nullable": true
            },
            "Elephant-get": {
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "capableOfLayingEggs",
                    "animalName",
                    "type"
                ],
                "properties": {
                    "name": {
                        "enum": [
                            "elephant"
                        ],
                        "type": "string",
                        "nullable": false
                    },
                    "id": {
                        "$ref": "#/components/schemas/AnimalIdentifier-get"
                    },
                    "capableOfLayingEggs": {
                        "type": "boolean",
                        "nullable": false
                    },
                    "animalName": {
                        "$ref": "#/components/schemas/FirstName-get"
                    },
                    "type": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "Elephant-post": {
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "animalName",
                    "type"
                ],
                "properties": {
                    "name": {
                        "enum": [
                            "elephant"
                        ],
                        "type": "string",
                        "nullable": false
                    },
                    "id": {
                        "$ref": "#/components/schemas/AnimalIdentifier-post"
                    },
                    "animalName": {
                        "$ref": "#/components/schemas/FirstName-post"
                    },
                    "type": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "Entity-get": {
                "type": "object",
                "properties": {}
            },
            "FirstName-get": {
                "type": "string",
                "format": "firstname",
                "pattern": "^\\w[\\w\\-\\s'`\"\u2018\u2019\u201c\u201d\u201f]*$"
            },
            "FirstName-post": {
                "type": "string",
                "format": "firstname",
                "pattern": "^\\w[\\w\\-\\s'`\"\u2018\u2019\u201c\u201d\u201f]*$"
            },
            "Fish-get": {
                "type": "object",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Shark-get"
                    },
                    {
                        "$ref": "#/components/schemas/Lungfish-get"
                    }
                ],
                "discriminator": {
                    "propertyName": "name",
                    "mapping": {
                        "shark": "#/components/schemas/Shark-get",
                        "lungfish": "#/components/schemas/Lungfish-get"
                    }
                },
                "properties": {
                    "type": {
                        "enum": [
                            "fish"
                        ],
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "Fish-post": {
                "type": "object",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Shark-post"
                    },
                    {
                        "$ref": "#/components/schemas/Lungfish-post"
                    }
                ],
                "discriminator": {
                    "propertyName": "name",
                    "mapping": {
                        "shark": "#/components/schemas/Shark-post",
                        "lungfish": "#/components/schemas/Lungfish-post"
                    }
                },
                "properties": {
                    "type": {
                        "enum": [
                            "fish"
                        ],
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "Human-get": {
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "lastName",
                    "capableOfLayingEggs",
                    "animalName",
                    "type"
                ],
                "properties": {
                    "name": {
                        "enum": [
                            "human"
                        ],
                        "type": "string",
                        "nullable": false
                    },
                    "id": {
                        "$ref": "#/components/schemas/AnimalIdentifier-get"
                    },
                    "lastName": {
                        "$ref": "#/components/schemas/LastName-get"
                    },
                    "capableOfLayingEggs": {
                        "type": "boolean",
                        "nullable": false
                    },
                    "animalName": {
                        "$ref": "#/components/schemas/FirstName-get"
                    },
                    "type": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "Human-post": {
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "animalName",
                    "lastName",
                    "type"
                ],
                "properties": {
                    "name": {
                        "enum": [
                            "human"
                        ],
                        "type": "string",
                        "nullable": false
                    },
                    "id": {
                        "$ref": "#/components/schemas/AnimalIdentifier-post"
                    },
                    "animalName": {
                        "$ref": "#/components/schemas/FirstName-post"
                    },
                    "lastName": {
                        "$ref": "#/components/schemas/LastName-post"
                    },
                    "type": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "LastName-get": {
                "type": "string",
                "format": "lastname",
                "pattern": "^\\w(\\w|\\-|[^\\S\\r\\n]|'|`|\"|\u2018|\u2019|\u201c|\u201d|\u201f)*$"
            },
            "LastName-post": {
                "type": "string",
                "format": "lastname",
                "pattern": "^\\w(\\w|\\-|[^\\S\\r\\n]|'|`|\"|\u2018|\u2019|\u201c|\u201d|\u201f)*$"
            },
            "Lungfish-get": {
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "capableOfWalkingOnWater",
                    "animalName",
                    "type"
                ],
                "properties": {
                    "name": {
                        "enum": [
                            "lungfish"
                        ],
                        "type": "string",
                        "nullable": false
                    },
                    "id": {
                        "$ref": "#/components/schemas/AnimalIdentifier-get"
                    },
                    "capableOfWalkingOnWater": {
                        "type": "boolean",
                        "nullable": false
                    },
                    "animalName": {
                        "$ref": "#/components/schemas/FirstName-get"
                    },
                    "type": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "Lungfish-post": {
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "animalName",
                    "type"
                ],
                "properties": {
                    "name": {
                        "enum": [
                            "lungfish"
                        ],
                        "type": "string",
                        "nullable": false
                    },
                    "id": {
                        "$ref": "#/components/schemas/AnimalIdentifier-post"
                    },
                    "animalName": {
                        "$ref": "#/components/schemas/FirstName-post"
                    },
                    "type": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "Mammal-get": {
                "type": "object",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Elephant-get"
                    },
                    {
                        "$ref": "#/components/schemas/Platypus-get"
                    },
                    {
                        "$ref": "#/components/schemas/Human-get"
                    }
                ],
                "discriminator": {
                    "propertyName": "name",
                    "mapping": {
                        "elephant": "#/components/schemas/Elephant-get",
                        "platypus": "#/components/schemas/Platypus-get",
                        "human": "#/components/schemas/Human-get"
                    }
                },
                "properties": {
                    "type": {
                        "enum": [
                            "mammal"
                        ],
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "Mammal-post": {
                "type": "object",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Elephant-post"
                    },
                    {
                        "$ref": "#/components/schemas/Platypus-post"
                    },
                    {
                        "$ref": "#/components/schemas/Human-post"
                    }
                ],
                "discriminator": {
                    "propertyName": "name",
                    "mapping": {
                        "elephant": "#/components/schemas/Elephant-post",
                        "platypus": "#/components/schemas/Platypus-post",
                        "human": "#/components/schemas/Human-post"
                    }
                },
                "properties": {
                    "type": {
                        "enum": [
                            "mammal"
                        ],
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "NonEmptyString-post": {
                "type": "string",
                "format": "nonemptystring",
                "pattern": "^.+$"
            },
            "Order-get": {
                "type": "object",
                "required": [
                    "id",
                    "orderLineList"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/OrderIdentifier-get"
                    },
                    "orderLineList": {
                        "$ref": "#/components/schemas/OrderLineList-get"
                    }
                }
            },
            "Order-post": {
                "type": "object",
                "required": [
                    "orderLineList"
                ],
                "properties": {
                    "orderLineList": {
                        "$ref": "#/components/schemas/OrderLineList-post"
                    }
                }
            },
            "OrderIdentifier-get": {
                "type": "integer",
                "nullable": true
            },
            "OrderIdentifier-post": {
                "type": "integer",
                "nullable": true
            },
            "OrderLine-post": {
                "type": "object",
                "required": [
                    "description"
                ],
                "properties": {
                    "description": {
                        "$ref": "#/components/schemas/NonEmptyString-post"
                    }
                }
            },
            "OrderLineList-get": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/OrderLine-post"
                }
            },
            "OrderLineList-post": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/OrderLine-post"
                }
            },
            "Ostrich-get": {
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "capableOfFlying",
                    "animalName",
                    "type"
                ],
                "properties": {
                    "name": {
                        "enum": [
                            "ostrich"
                        ],
                        "type": "string",
                        "nullable": false
                    },
                    "id": {
                        "$ref": "#/components/schemas/AnimalIdentifier-get"
                    },
                    "capableOfFlying": {
                        "type": "boolean",
                        "nullable": false
                    },
                    "animalName": {
                        "$ref": "#/components/schemas/FirstName-get"
                    },
                    "type": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "Ostrich-post": {
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "animalName",
                    "type"
                ],
                "properties": {
                    "name": {
                        "enum": [
                            "ostrich"
                        ],
                        "type": "string",
                        "nullable": false
                    },
                    "id": {
                        "$ref": "#/components/schemas/AnimalIdentifier-post"
                    },
                    "animalName": {
                        "$ref": "#/components/schemas/FirstName-post"
                    },
                    "type": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "PartialInput-post": {
                "type": "object",
                "required": [
                    "input"
                ],
                "properties": {
                    "input": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "Platypus-get": {
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "capableOfLayingEggs",
                    "animalName",
                    "type"
                ],
                "properties": {
                    "name": {
                        "enum": [
                            "platypus"
                        ],
                        "type": "string",
                        "nullable": false
                    },
                    "id": {
                        "$ref": "#/components/schemas/AnimalIdentifier-get"
                    },
                    "capableOfLayingEggs": {
                        "type": "boolean",
                        "nullable": false
                    },
                    "animalName": {
                        "$ref": "#/components/schemas/FirstName-get"
                    },
                    "type": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "Platypus-post": {
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "animalName",
                    "type"
                ],
                "properties": {
                    "name": {
                        "enum": [
                            "platypus"
                        ],
                        "type": "string",
                        "nullable": false
                    },
                    "id": {
                        "$ref": "#/components/schemas/AnimalIdentifier-post"
                    },
                    "animalName": {
                        "$ref": "#/components/schemas/FirstName-post"
                    },
                    "type": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "PrimitiveOnly-get": {
                "type": "object",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/PrimitiveOnlyIdentifier-get"
                    },
                    "stringField": {
                        "type": "string",
                        "nullable": true
                    },
                    "integerField": {
                        "type": "integer",
                        "nullable": true
                    },
                    "floatingPoint": {
                        "type": "number",
                        "nullable": true
                    },
                    "booleanField": {
                        "type": "boolean",
                        "nullable": true
                    }
                }
            },
            "PrimitiveOnly-patch": {
                "type": "object",
                "properties": {
                    "stringField": {
                        "type": "string",
                        "nullable": true
                    },
                    "integerField": {
                        "type": "integer",
                        "nullable": true
                    },
                    "floatingPoint": {
                        "type": "number",
                        "nullable": true
                    },
                    "booleanField": {
                        "type": "boolean",
                        "nullable": true
                    }
                }
            },
            "PrimitiveOnly-post": {
                "type": "object",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/PrimitiveOnlyIdentifier-post"
                    },
                    "stringField": {
                        "type": "string",
                        "nullable": true
                    },
                    "integerField": {
                        "type": "integer",
                        "nullable": true
                    },
                    "floatingPoint": {
                        "type": "number",
                        "nullable": true
                    },
                    "booleanField": {
                        "type": "boolean",
                        "nullable": true
                    }
                }
            },
            "PrimitiveOnlyIdentifier-get": {
                "type": "string",
                "format": "primitiveonlyidentifier",
                "pattern": "^[a-f0-9]{8}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{12}$"
            },
            "PrimitiveOnlyIdentifier-post": {
                "type": "string",
                "format": "primitiveonlyidentifier",
                "pattern": "^[a-f0-9]{8}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{12}$"
            },
            "Seagull-get": {
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "capableOfFlying",
                    "animalName",
                    "type"
                ],
                "properties": {
                    "name": {
                        "enum": [
                            "seagull"
                        ],
                        "type": "string",
                        "nullable": false
                    },
                    "id": {
                        "$ref": "#/components/schemas/AnimalIdentifier-get"
                    },
                    "capableOfFlying": {
                        "type": "boolean",
                        "nullable": false
                    },
                    "animalName": {
                        "$ref": "#/components/schemas/FirstName-get"
                    },
                    "type": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "Seagull-post": {
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "animalName",
                    "type"
                ],
                "properties": {
                    "name": {
                        "enum": [
                            "seagull"
                        ],
                        "type": "string",
                        "nullable": false
                    },
                    "id": {
                        "$ref": "#/components/schemas/AnimalIdentifier-post"
                    },
                    "animalName": {
                        "$ref": "#/components/schemas/FirstName-post"
                    },
                    "type": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "Shark-get": {
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "capableOfWalkingOnWater",
                    "animalName",
                    "type"
                ],
                "properties": {
                    "name": {
                        "enum": [
                            "shark"
                        ],
                        "type": "string",
                        "nullable": false
                    },
                    "id": {
                        "$ref": "#/components/schemas/AnimalIdentifier-get"
                    },
                    "capableOfWalkingOnWater": {
                        "type": "boolean",
                        "nullable": false
                    },
                    "animalName": {
                        "$ref": "#/components/schemas/FirstName-get"
                    },
                    "type": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "Shark-post": {
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "animalName",
                    "type"
                ],
                "properties": {
                    "name": {
                        "enum": [
                            "shark"
                        ],
                        "type": "string",
                        "nullable": false
                    },
                    "id": {
                        "$ref": "#/components/schemas/AnimalIdentifier-post"
                    },
                    "animalName": {
                        "$ref": "#/components/schemas/FirstName-post"
                    },
                    "type": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "StrongPassword-post": {
                "pattern": "^(?=(.*[a-z]){1,})(?=(.*[A-Z]){1,})(?=(.*[0-9]){1,})(?=(.*[\\!@#\\$%\\^&\\*\\(\\)\\-_\\+\\.]){1,})[a-zA-Z0-9\\!@#\\$%\\^&\\*\\(\\)\\-_\\+\\.]{6,42}$",
                "type": "string",
                "format": "password"
            },
            "Throwable-get": {
                "type": "object",
                "required": [
                    "message",
                    "code"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "nullable": false
                    },
                    "code": {
                        "$ref": "#/components/schemas/mixed"
                    }
                }
            },
            "User-get": {
                "type": "object",
                "required": [
                    "id",
                    "blocked",
                    "blockedReason",
                    "phoneNumber"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UserIdentifier-get"
                    },
                    "blocked": {
                        "type": "boolean",
                        "nullable": false
                    },
                    "blockedReason": {
                        "$ref": "#/components/schemas/DatabaseText-nullable-get"
                    },
                    "phoneNumber": {
                        "$ref": "#/components/schemas/DutchPhoneNumber-nullable-get"
                    }
                }
            },
            "User-nullable-get": {
                "type": "object",
                "required": [
                    "id",
                    "blocked",
                    "blockedReason",
                    "phoneNumber"
                ],
                "nullable": true,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UserIdentifier-get"
                    },
                    "blocked": {
                        "type": "boolean",
                        "nullable": false
                    },
                    "blockedReason": {
                        "$ref": "#/components/schemas/DatabaseText-nullable-get"
                    },
                    "phoneNumber": {
                        "$ref": "#/components/schemas/DutchPhoneNumber-nullable-get"
                    }
                }
            },
            "User-patch": {
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "$ref": "#/components/schemas/DutchPhoneNumber-nullable-post"
                    }
                }
            },
            "User-post": {
                "type": "object",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UserIdentifier-post"
                    },
                    "phoneNumber": {
                        "$ref": "#/components/schemas/DutchPhoneNumber-nullable-post"
                    }
                }
            },
            "UserIdentifier-get": {
                "type": "string",
                "format": "useridentifier"
            },
            "UserIdentifier-post": {
                "type": "string",
                "format": "useridentifier"
            },
            "ValidationException-get": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "mixed": {
                "nullable": true
            }
        }
    }
}