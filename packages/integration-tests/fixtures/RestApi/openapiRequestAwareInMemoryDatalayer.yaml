openapi: 3.0.1
info:
  title: 'Apie-lib generated OpenAPI spec'
  version: 1.0.0
paths:
  '/PrimitiveOnly/dropdown-options/{property}':
    post:
      tags:
        - PrimitiveOnly
      description: 'Returns dropdown options for a specific input'
      operationId: cms.dropdown_options.PrimitiveOnly
      parameters:
        -
          name: property
          in: path
          description: 'property of instance of PartialInput'
          required: true
          schema:
            $ref: '#/components/schemas/PartialInput-post'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialInput-post'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DropdownOptionList-get'
  '/User/dropdown-options/{property}':
    post:
      tags:
        - User
      description: 'Returns dropdown options for a specific input'
      operationId: cms.dropdown_options.User
      parameters:
        -
          name: property
          in: path
          description: 'property of instance of PartialInput'
          required: true
          schema:
            $ref: '#/components/schemas/PartialInput-post'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialInput-post'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DropdownOptionList-get'
  '/PrimitiveOnly/{id}/dropdown-options/{property}':
    post:
      tags:
        - PrimitiveOnly
      description: 'Returns dropdown options for a specific input'
      operationId: cms.dropdown_options.existing.PrimitiveOnly
      parameters:
        -
          name: id
          in: path
          description: 'id of instance of PartialInput'
          required: true
          schema:
            $ref: '#/components/schemas/PartialInput-post'
        -
          name: property
          in: path
          description: 'property of instance of PartialInput'
          required: true
          schema:
            $ref: '#/components/schemas/PartialInput-post'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialInput-post'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DropdownOptionList-get'
  '/User/{id}/dropdown-options/{property}':
    post:
      tags:
        - User
      description: 'Returns dropdown options for a specific input'
      operationId: cms.dropdown_options.existing.User
      parameters:
        -
          name: id
          in: path
          description: 'id of instance of PartialInput'
          required: true
          schema:
            $ref: '#/components/schemas/PartialInput-post'
        -
          name: property
          in: path
          description: 'property of instance of PartialInput'
          required: true
          schema:
            $ref: '#/components/schemas/PartialInput-post'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialInput-post'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DropdownOptionList-get'
  /PrimitiveOnly:
    post:
      tags:
        - PrimitiveOnly
        - resource
      description: 'Creates an instance of PrimitiveOnly'
      operationId: post-PrimitiveOnly
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrimitiveOnly-post'
      responses:
        '201':
          description: 'Resource was created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrimitiveOnly-get'
        '400':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '405':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '406':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '422':
          description: 'A validation error occurred'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException-get'
        '409':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
    get:
      tags:
        - PrimitiveOnly
        - resource
      description: 'Gets a list of resource that are an instance of PrimitiveOnly'
      operationId: get-all-PrimitiveOnly
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - totalCount
                  - first
                  - last
                  - list
                type: object
                properties:
                  totalCount:
                    type: integer
                  first:
                    type: string
                    format: uri
                  last:
                    type: string
                    format: uri
                  prev:
                    type: string
                    format: uri
                  next:
                    type: string
                    format: uri
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/PrimitiveOnly-get'
      parameters:
        -
          name: search
          in: query
          schema:
            minLength: 1
            type: string
        -
          name: 'query[stringField]'
          in: query
          schema:
            type: string
        -
          name: 'query[integerField]'
          in: query
          schema:
            type: integer
        -
          name: 'query[floatingPoint]'
          in: query
          schema:
            type: number
        -
          name: 'query[booleanField]'
          in: query
          schema:
            type: boolean
        -
          name: 'query[id]'
          in: query
          schema:
            $ref: '#/components/schemas/PrimitiveOnlyIdentifier-get'
  /User:
    post:
      tags:
        - User
        - resource
      description: 'Creates an instance of User'
      operationId: post-User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-post'
      responses:
        '201':
          description: 'Resource was created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-get'
        '400':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '405':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '406':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '422':
          description: 'A validation error occurred'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException-get'
        '409':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
    get:
      tags:
        - User
        - resource
      description: 'Gets a list of resource that are an instance of User'
      operationId: get-all-User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - totalCount
                  - first
                  - last
                  - list
                type: object
                properties:
                  totalCount:
                    type: integer
                  first:
                    type: string
                    format: uri
                  last:
                    type: string
                    format: uri
                  prev:
                    type: string
                    format: uri
                  next:
                    type: string
                    format: uri
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/User-get'
      parameters:
        -
          name: search
          in: query
          schema:
            minLength: 1
            type: string
        -
          name: 'query[phoneNumber]'
          in: query
          schema:
            $ref: '#/components/schemas/DutchPhoneNumber-get'
        -
          name: 'query[blockedReason]'
          in: query
          schema:
            $ref: '#/components/schemas/DatabaseText-get'
        -
          name: 'query[id]'
          in: query
          schema:
            $ref: '#/components/schemas/UserIdentifier-get'
  '/PrimitiveOnly/{id}':
    get:
      tags:
        - PrimitiveOnly
        - resource
      description: 'Gets a resource of PrimitiveOnly with a specific id'
      operationId: get-single-PrimitiveOnly
      parameters:
        -
          name: id
          in: path
          description: 'id of instance of PrimitiveOnly'
          required: true
          schema:
            $ref: '#/components/schemas/PrimitiveOnlyIdentifier-post'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrimitiveOnly-get'
        '404':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
    patch:
      tags:
        - PrimitiveOnly
        - resource
      description: 'Modifies an instance of PrimitiveOnly'
      operationId: patch-single-PrimitiveOnly
      parameters:
        -
          name: id
          in: path
          description: 'id of instance of PrimitiveOnly'
          required: true
          schema:
            $ref: '#/components/schemas/PrimitiveOnlyIdentifier-post'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrimitiveOnly-patch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrimitiveOnly-get'
        '400':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '405':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '406':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '422':
          description: 'A validation error occurred'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException-get'
        '409':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
  '/User/{id}':
    get:
      tags:
        - User
        - resource
      description: 'Gets a resource of User with a specific id'
      operationId: get-single-User
      parameters:
        -
          name: id
          in: path
          description: 'id of instance of User'
          required: true
          schema:
            $ref: '#/components/schemas/UserIdentifier-post'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-get'
        '404':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
    patch:
      tags:
        - User
        - resource
      description: 'Modifies an instance of User'
      operationId: patch-single-User
      parameters:
        -
          name: id
          in: path
          description: 'id of instance of User'
          required: true
          schema:
            $ref: '#/components/schemas/UserIdentifier-post'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-patch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-get'
        '400':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '405':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '406':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '422':
          description: 'A validation error occurred'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException-get'
        '409':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
  '/User/{id}/block':
    post:
      tags:
        - User
        - action
      description: 'Runs method block on a User with a specific id'
      operationId: get-single-User-run-block
      parameters:
        -
          name: id
          in: path
          description: 'id of instance of User'
          required: true
          schema:
            $ref: '#/components/schemas/UserIdentifier-post'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - blockedReason
              type: object
              properties:
                blockedReason:
                  $ref: '#/components/schemas/DatabaseText-post'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-get'
        '400':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '405':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '406':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '422':
          description: 'A validation error occurred'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException-get'
        '404':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
  '/User/{id}/unblock':
    get:
      tags:
        - User
        - action
      description: 'Runs method unblock on a User with a specific id'
      operationId: get-single-User-run-unblock
      parameters:
        -
          name: id
          in: path
          description: 'id of instance of User'
          required: true
          schema:
            $ref: '#/components/schemas/UserIdentifier-post'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-get'
        '404':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
  '/User/{id}/activate':
    post:
      tags:
        - User
        - action
      description: 'Runs method activate on a User with a specific id'
      operationId: get-single-User-run-activate
      parameters:
        -
          name: id
          in: path
          description: 'id of instance of User'
          required: true
          schema:
            $ref: '#/components/schemas/UserIdentifier-post'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - activationToken
                - newPassword
                - repeat
              type: object
              properties:
                activationToken:
                  type: string
                newPassword:
                  $ref: '#/components/schemas/StrongPassword-post'
                repeat:
                  $ref: '#/components/schemas/StrongPassword-post'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-get'
        '400':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '405':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '406':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '422':
          description: 'A validation error occurred'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException-get'
        '404':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
  '/User/{id}/verify':
    post:
      tags:
        - User
        - action
      description: 'Runs method verify on a User with a specific id'
      operationId: get-single-User-run-verify
      parameters:
        -
          name: id
          in: path
          description: 'id of instance of User'
          required: true
          schema:
            $ref: '#/components/schemas/UserIdentifier-post'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - password
              type: object
              properties:
                password:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '405':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '406':
          description: 'Invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
        '422':
          description: 'A validation error occurred'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException-get'
        '404':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwable-get'
servers:
  -
    url: /api/types
  -
    url: 'http://localhost//api/types'
components:
  schemas:
    DatabaseText-get:
      maxLength: 65535
      minLength: 0
      type: string
      example: 'Lorem Ipsum'
    DatabaseText-post:
      maxLength: 65535
      minLength: 0
      type: string
      example: 'Lorem Ipsum'
    DropdownOption-post:
      type: object
      required:
        - value
        - displayValue
      properties:
        value:
          type: string
          nullable: false
        displayValue:
          type: string
          nullable: false
    DropdownOptionList-get:
      type: array
      items:
        $ref: '#/components/schemas/DropdownOption-post'
    DutchPhoneNumber-get:
      type: string
      format: dutchphonenumber
    DutchPhoneNumber-post:
      type: string
      format: dutchphonenumber
    PartialInput-post:
      type: object
      required:
        - input
      properties:
        input:
          type: string
          nullable: false
    PrimitiveOnly-get:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/PrimitiveOnlyIdentifier-get'
        stringField:
          type: string
          nullable: true
        integerField:
          type: integer
          nullable: true
        floatingPoint:
          type: number
          nullable: true
        booleanField:
          type: boolean
          nullable: true
    PrimitiveOnly-patch:
      type: object
      properties:
        stringField:
          type: string
          nullable: true
        integerField:
          type: integer
          nullable: true
        floatingPoint:
          type: number
          nullable: true
        booleanField:
          type: boolean
          nullable: true
    PrimitiveOnly-post:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/PrimitiveOnlyIdentifier-post'
        stringField:
          type: string
          nullable: true
        integerField:
          type: integer
          nullable: true
        floatingPoint:
          type: number
          nullable: true
        booleanField:
          type: boolean
          nullable: true
    PrimitiveOnlyIdentifier-get:
      type: string
      format: primitiveonlyidentifier
      pattern: '^[a-f0-9]{8}\-[a-f0-9]{4}\-[a-f0-9]{4}\-[a-f0-9]{4}\-[a-f0-9]{12}$'
    PrimitiveOnlyIdentifier-post:
      type: string
      format: primitiveonlyidentifier
      pattern: '^[a-f0-9]{8}\-[a-f0-9]{4}\-[a-f0-9]{4}\-[a-f0-9]{4}\-[a-f0-9]{12}$'
    StrongPassword-post:
      pattern: '^(?=(.*[a-z]){1,})(?=(.*[A-Z]){1,})(?=(.*[0-9]){1,})(?=(.*[\!@#\$%\^&\*\(\)\-_\+\.]){1,})[a-zA-Z0-9\!@#\$%\^&\*\(\)\-_\+\.]{6,42}$'
      type: string
      format: password
    Throwable-get:
      type: object
      required:
        - message
        - code
      properties:
        message:
          type: string
          nullable: false
        code:
          $ref: '#/components/schemas/mixed'
    User-get:
      type: object
      required:
        - id
        - blocked
        - blockedReason
        - phoneNumber
      properties:
        id:
          $ref: '#/components/schemas/UserIdentifier-get'
        blocked:
          type: boolean
          nullable: false
        blockedReason:
          $ref: '#/components/schemas/DatabaseText-get'
        phoneNumber:
          $ref: '#/components/schemas/DutchPhoneNumber-get'
    User-patch:
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/DutchPhoneNumber-post'
    User-post:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/UserIdentifier-post'
        phoneNumber:
          $ref: '#/components/schemas/DutchPhoneNumber-post'
    UserIdentifier-get:
      type: string
      format: useridentifier
    UserIdentifier-post:
      type: string
      format: useridentifier
    ValidationException-get:
      type: object
      properties:
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
    mixed:
      nullable: true
