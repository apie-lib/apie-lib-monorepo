{
    "openapi": "3.0.1",
    "info": {
        "title": "Apie-lib generated OpenAPI spec",
        "version": "1.0.0"
    },
    "paths": {
        "/ManyColumns/dropdown-options/{property}": {
            "post": {
                "tags": [
                    "ManyColumns"
                ],
                "description": "Returns dropdown options for a specific input",
                "operationId": "cms.dropdown_options.ManyColumns",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "description": "property of instance of PartialInput",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PartialInput-post"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PartialInput-post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DropdownOptionList-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/User/dropdown-options/{property}": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Returns dropdown options for a specific input",
                "operationId": "cms.dropdown_options.User",
                "parameters": [
                    {
                        "name": "property",
                        "in": "path",
                        "description": "property of instance of PartialInput",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PartialInput-post"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PartialInput-post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DropdownOptionList-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ManyColumns/{id}/dropdown-options/{property}": {
            "post": {
                "tags": [
                    "ManyColumns"
                ],
                "description": "Returns dropdown options for a specific input",
                "operationId": "cms.dropdown_options.existing.ManyColumns",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of PartialInput",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PartialInput-post"
                        }
                    },
                    {
                        "name": "property",
                        "in": "path",
                        "description": "property of instance of PartialInput",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PartialInput-post"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PartialInput-post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DropdownOptionList-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ManyColumns": {
            "post": {
                "tags": [
                    "ManyColumns",
                    "resource"
                ],
                "description": "Creates an instance of ManyColumns",
                "operationId": "post-ManyColumns",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManyColumns-post"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Resource was created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManyColumns-get"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "ManyColumns",
                    "resource"
                ],
                "description": "Gets a list of resource that are an instance of ManyColumns",
                "operationId": "get-all-ManyColumns",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "totalCount",
                                        "first",
                                        "last",
                                        "list"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "totalCount": {
                                            "type": "integer"
                                        },
                                        "first": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "last": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "prev": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ManyColumns-get"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "query[stringValue]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query[intValue]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query[booleanValue]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query[floatValue]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query[nullableStringValue]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "query[nullableIntValue]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "query[nullableBooleanValue]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "query[nullableFloatValue]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "query[stringList]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query[nullableStringList]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "query[stringListHashmap]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query[nullableStringListHashmap]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "query[conflictingTypes]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "query[animalList]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query[nullableAnimalList]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "query[compositeObject]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query[nullableCompositeObject]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "query[passwordList]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query[nullablePasswordList]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "query[userIdentifier]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "query[mixedType]",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "query[phonenumber]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query[id]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/User": {
            "post": {
                "tags": [
                    "User",
                    "resource"
                ],
                "description": "Creates an instance of User",
                "operationId": "post-User",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User-post"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Resource was created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-get"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "User",
                    "resource"
                ],
                "description": "Gets a list of resource that are an instance of User",
                "operationId": "get-all-User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "totalCount",
                                        "first",
                                        "last",
                                        "list"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "totalCount": {
                                            "type": "integer"
                                        },
                                        "first": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "last": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "prev": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "next": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User-get"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "query[id]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/ManyColumns/{id}": {
            "get": {
                "tags": [
                    "ManyColumns",
                    "resource"
                ],
                "description": "Gets a resource of ManyColumns with a specific id",
                "operationId": "get-single-ManyColumns",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of ManyColumns",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/ManyColumnsIdentifier-post"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManyColumns-get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "ManyColumns",
                    "resource"
                ],
                "description": "Modifies an instance of ManyColumns",
                "operationId": "patch-single-ManyColumns",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of ManyColumns",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/ManyColumnsIdentifier-post"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManyColumns-patch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManyColumns-get"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/User/{id}": {
            "get": {
                "tags": [
                    "User",
                    "resource"
                ],
                "description": "Gets a resource of User with a specific id",
                "operationId": "get-single-User",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of instance of User",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UserIdentifier-post"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ApplicationInfo": {
            "get": {
                "tags": [
                    "ApplicationInfo",
                    "action"
                ],
                "description": "Calls method ApplicationInfo and returns return value.",
                "operationId": "call-method-ApplicationInfo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationInfo-get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ApplicationInfo/manyArguments": {
            "post": {
                "tags": [
                    "ApplicationInfo",
                    "action"
                ],
                "description": "Calls method manyArguments and returns return value.",
                "operationId": "call-method-ApplicationInfo-manyArguments",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "input",
                                    "applicationInfo",
                                    "string",
                                    "dateTime",
                                    "colorOrGender",
                                    "unionTypehint"
                                ],
                                "type": "object",
                                "properties": {
                                    "input": {
                                        "type": "integer"
                                    },
                                    "applicationInfo": {
                                        "$ref": "#/components/schemas/ApplicationInfo-post"
                                    },
                                    "string": {
                                        "type": "string"
                                    },
                                    "dateTime": {
                                        "$ref": "#/components/schemas/DateTime-post"
                                    },
                                    "colorOrGender": {
                                        "oneOf": [
                                            {
                                                "$ref": "#/components/schemas/ColorEnum-post"
                                            },
                                            {
                                                "$ref": "#/components/schemas/Gender-post"
                                            }
                                        ]
                                    },
                                    "unionTypehint": {
                                        "oneOf": [
                                            {
                                                "$ref": "#/components/schemas/NoValueEnum-post"
                                            },
                                            {
                                                "$ref": "#/components/schemas/IntEnum-post"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ColorEnum-post"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ApplicationInfo/powerOf2": {
            "post": {
                "tags": [
                    "ApplicationInfo",
                    "action"
                ],
                "description": "Calls method powerOf2 and returns return value.",
                "operationId": "call-method-ApplicationInfo-powerOf2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "input"
                                ],
                                "type": "object",
                                "properties": {
                                    "input": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Login/verifyAuthentication": {
            "post": {
                "tags": [
                    "Login",
                    "action"
                ],
                "description": "Calls method verifyAuthentication and returns return value.",
                "operationId": "call-method-Login-verifyAuthentication",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Throwable-get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationException-get"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User-nullable-get"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "/api/default"
        },
        {
            "url": "http://localhost//api/default"
        }
    ],
    "components": {
        "schemas": {
            "Animal-nullable-post": {
                "type": "object",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Cow-post"
                    },
                    {
                        "$ref": "#/components/schemas/Elephant-post"
                    },
                    {
                        "$ref": "#/components/schemas/Fish-post"
                    }
                ],
                "discriminator": {
                    "propertyName": "animalType",
                    "mapping": {
                        "cow": "#/components/schemas/Cow-post",
                        "elephant": "#/components/schemas/Elephant-post",
                        "fish": "#/components/schemas/Fish-post"
                    }
                },
                "nullable": true
            },
            "Animal-post": {
                "type": "object",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Cow-post"
                    },
                    {
                        "$ref": "#/components/schemas/Elephant-post"
                    },
                    {
                        "$ref": "#/components/schemas/Fish-post"
                    }
                ],
                "discriminator": {
                    "propertyName": "animalType",
                    "mapping": {
                        "cow": "#/components/schemas/Cow-post",
                        "elephant": "#/components/schemas/Elephant-post",
                        "fish": "#/components/schemas/Fish-post"
                    }
                }
            },
            "AnimalIdentifier-nullable-post": {
                "type": "string",
                "format": "animalidentifier",
                "pattern": "^[a-f0-9]{8}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{12}$",
                "nullable": true
            },
            "AnimalList-get": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Animal-post"
                }
            },
            "AnimalList-nullable-get": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Animal-nullable-post"
                },
                "nullable": true
            },
            "AnimalList-nullable-post": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Animal-nullable-post"
                },
                "nullable": true
            },
            "AnimalList-post": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Animal-post"
                }
            },
            "ApplicationInfo-get": {
                "type": "object",
                "required": [
                    "applicationName",
                    "applicationVersion",
                    "author"
                ],
                "properties": {
                    "applicationName": {
                        "type": "string",
                        "nullable": false
                    },
                    "applicationVersion": {
                        "type": "string",
                        "nullable": false
                    },
                    "author": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "ApplicationInfo-post": {
                "type": "object",
                "required": [
                    "applicationName",
                    "applicationVersion",
                    "author"
                ],
                "properties": {
                    "applicationName": {
                        "type": "string",
                        "nullable": false
                    },
                    "applicationVersion": {
                        "type": "string",
                        "nullable": false
                    },
                    "author": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "BelgianPhoneNumber-get": {
                "type": "string",
                "format": "belgianphonenumber"
            },
            "BelgianPhoneNumber-post": {
                "type": "string",
                "format": "belgianphonenumber"
            },
            "BritishPhoneNumber-post": {
                "type": "string",
                "format": "britishphonenumber"
            },
            "ColorEnum-post": {
                "enum": [
                    "red",
                    "green",
                    "blue"
                ],
                "type": "string"
            },
            "CompositeObjectExample-get": {
                "type": "object",
                "required": [
                    "value1",
                    "value2",
                    "value3"
                ],
                "properties": {
                    "value1": {
                        "type": "string",
                        "nullable": false
                    },
                    "value2": {
                        "type": "string",
                        "nullable": false
                    },
                    "value3": {
                        "type": "integer",
                        "nullable": false
                    }
                }
            },
            "CompositeObjectExample-nullable-get": {
                "type": "object",
                "required": [
                    "value1",
                    "value2",
                    "value3"
                ],
                "nullable": true,
                "properties": {
                    "value1": {
                        "type": "string",
                        "nullable": false
                    },
                    "value2": {
                        "type": "string",
                        "nullable": false
                    },
                    "value3": {
                        "type": "integer",
                        "nullable": false
                    }
                }
            },
            "CompositeObjectExample-nullable-post": {
                "type": "object",
                "required": [
                    "value1",
                    "value2",
                    "value3"
                ],
                "nullable": true,
                "properties": {
                    "value1": {
                        "type": "string",
                        "nullable": false
                    },
                    "value2": {
                        "type": "string",
                        "nullable": false
                    },
                    "value3": {
                        "type": "integer",
                        "nullable": false
                    }
                }
            },
            "CompositeObjectExample-post": {
                "type": "object",
                "required": [
                    "value1",
                    "value2",
                    "value3"
                ],
                "properties": {
                    "value1": {
                        "type": "string",
                        "nullable": false
                    },
                    "value2": {
                        "type": "string",
                        "nullable": false
                    },
                    "value3": {
                        "type": "integer",
                        "nullable": false
                    }
                }
            },
            "Cow-post": {
                "type": "object",
                "required": [
                    "animalType"
                ],
                "properties": {
                    "animalType": {
                        "enum": [
                            "cow"
                        ],
                        "type": "string",
                        "nullable": false
                    },
                    "id": {
                        "$ref": "#/components/schemas/AnimalIdentifier-nullable-post"
                    },
                    "hasMilk": {
                        "type": "boolean",
                        "nullable": false
                    }
                }
            },
            "DateTime-post": {
                "pattern": "^((|\\-)[0-9]{4})\\-((0[1-9])|(1[0-2]))\\-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))\\:[0-5][0-9]\\:[0-5][0-9](\\+\\d{2}:\\d{2})$",
                "type": "string",
                "format": "datetime"
            },
            "DropdownOption-post": {
                "type": "object",
                "required": [
                    "value",
                    "displayValue"
                ],
                "properties": {
                    "value": {
                        "type": "string",
                        "nullable": false
                    },
                    "displayValue": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "DropdownOptionList-get": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/DropdownOption-post"
                }
            },
            "DutchPhoneNumber-get": {
                "type": "string",
                "format": "dutchphonenumber"
            },
            "DutchPhoneNumber-post": {
                "type": "string",
                "format": "dutchphonenumber"
            },
            "Elephant-post": {
                "type": "object",
                "required": [
                    "animalType"
                ],
                "properties": {
                    "animalType": {
                        "enum": [
                            "elephant"
                        ],
                        "type": "string",
                        "nullable": false
                    },
                    "id": {
                        "$ref": "#/components/schemas/AnimalIdentifier-nullable-post"
                    },
                    "starving": {
                        "type": "boolean",
                        "nullable": false
                    }
                }
            },
            "Fish-post": {
                "type": "object",
                "required": [
                    "animalType"
                ],
                "properties": {
                    "animalType": {
                        "enum": [
                            "fish"
                        ],
                        "type": "string",
                        "nullable": false
                    },
                    "id": {
                        "$ref": "#/components/schemas/AnimalIdentifier-nullable-post"
                    },
                    "poisonous": {
                        "type": "boolean",
                        "nullable": false
                    }
                }
            },
            "Gender-post": {
                "enum": [
                    "M",
                    "F"
                ],
                "type": "string"
            },
            "IntEnum-post": {
                "enum": [
                    0,
                    1,
                    2
                ],
                "type": "integer"
            },
            "ManyColumns-get": {
                "type": "object",
                "required": [
                    "id",
                    "stringValue",
                    "intValue",
                    "booleanValue",
                    "floatValue",
                    "stringList",
                    "stringListHashmap",
                    "animalList",
                    "compositeObject",
                    "nullableCompositeObject",
                    "passwordList",
                    "phonenumber"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/ManyColumnsIdentifier-get"
                    },
                    "stringValue": {
                        "type": "string",
                        "nullable": false
                    },
                    "intValue": {
                        "type": "integer",
                        "nullable": false
                    },
                    "booleanValue": {
                        "type": "boolean",
                        "nullable": false
                    },
                    "floatValue": {
                        "type": "number",
                        "nullable": false
                    },
                    "nullableStringValue": {
                        "type": "string",
                        "nullable": true
                    },
                    "nullableIntValue": {
                        "type": "integer",
                        "nullable": true
                    },
                    "nullableBooleanValue": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "nullableFloatValue": {
                        "type": "number",
                        "nullable": true
                    },
                    "stringList": {
                        "$ref": "#/components/schemas/StringList-get"
                    },
                    "nullableStringList": {
                        "$ref": "#/components/schemas/StringList-nullable-get"
                    },
                    "stringListHashmap": {
                        "$ref": "#/components/schemas/StringListHashmap-get"
                    },
                    "nullableStringListHashmap": {
                        "$ref": "#/components/schemas/StringListHashmap-nullable-get"
                    },
                    "conflictingTypes": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CompositeObjectExample-get"
                            },
                            {
                                "$ref": "#/components/schemas/AnimalList-get"
                            },
                            {
                                "type": "integer"
                            },
                            {
                                "nullable": true,
                                "default": null
                            }
                        ],
                        "nullable": true
                    },
                    "animalList": {
                        "$ref": "#/components/schemas/AnimalList-get"
                    },
                    "nullableAnimalList": {
                        "$ref": "#/components/schemas/AnimalList-nullable-get"
                    },
                    "compositeObject": {
                        "$ref": "#/components/schemas/CompositeObjectExample-get"
                    },
                    "nullableCompositeObject": {
                        "$ref": "#/components/schemas/CompositeObjectExample-nullable-get"
                    },
                    "passwordList": {
                        "$ref": "#/components/schemas/StrongPasswordList-get"
                    },
                    "nullablePasswordList": {
                        "$ref": "#/components/schemas/StrongPasswordList-nullable-get"
                    },
                    "userIdentifier": {
                        "$ref": "#/components/schemas/UserIdentifier-nullable-get"
                    },
                    "mixedType": {
                        "$ref": "#/components/schemas/mixed"
                    },
                    "phonenumber": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DutchPhoneNumber-get"
                            },
                            {
                                "$ref": "#/components/schemas/BelgianPhoneNumber-get"
                            }
                        ],
                        "nullable": false
                    }
                }
            },
            "ManyColumns-patch": {
                "type": "object",
                "properties": {
                    "stringValue": {
                        "type": "string",
                        "nullable": false
                    },
                    "intValue": {
                        "type": "integer",
                        "nullable": false
                    },
                    "booleanValue": {
                        "type": "boolean",
                        "nullable": false
                    },
                    "floatValue": {
                        "type": "number",
                        "nullable": false
                    },
                    "nullableStringValue": {
                        "type": "string",
                        "nullable": true
                    },
                    "nullableIntValue": {
                        "type": "integer",
                        "nullable": true
                    },
                    "nullableBooleanValue": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "nullableFloatValue": {
                        "type": "number",
                        "nullable": true
                    },
                    "stringList": {
                        "$ref": "#/components/schemas/StringList-post"
                    },
                    "nullableStringList": {
                        "$ref": "#/components/schemas/StringList-nullable-post"
                    },
                    "stringListHashmap": {
                        "$ref": "#/components/schemas/StringListHashmap-post"
                    },
                    "nullableStringListHashmap": {
                        "$ref": "#/components/schemas/StringListHashmap-nullable-post"
                    },
                    "conflictingTypes": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CompositeObjectExample-post"
                            },
                            {
                                "$ref": "#/components/schemas/AnimalList-post"
                            },
                            {
                                "type": "integer"
                            },
                            {
                                "nullable": true,
                                "default": null
                            }
                        ],
                        "nullable": true
                    },
                    "animalList": {
                        "$ref": "#/components/schemas/AnimalList-post"
                    },
                    "nullableAnimalList": {
                        "$ref": "#/components/schemas/AnimalList-nullable-post"
                    },
                    "compositeObject": {
                        "$ref": "#/components/schemas/CompositeObjectExample-post"
                    },
                    "nullableCompositeObject": {
                        "$ref": "#/components/schemas/CompositeObjectExample-nullable-post"
                    },
                    "passwordList": {
                        "$ref": "#/components/schemas/StrongPasswordList-post"
                    },
                    "nullablePasswordList": {
                        "$ref": "#/components/schemas/StrongPasswordList-nullable-post"
                    },
                    "userIdentifier": {
                        "$ref": "#/components/schemas/UserIdentifier-nullable-post"
                    },
                    "mixedType": {
                        "$ref": "#/components/schemas/mixed"
                    },
                    "phonenumber": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DutchPhoneNumber-post"
                            },
                            {
                                "$ref": "#/components/schemas/BelgianPhoneNumber-post"
                            }
                        ],
                        "nullable": false
                    }
                }
            },
            "ManyColumns-post": {
                "type": "object",
                "required": [
                    "stringValue",
                    "intValue",
                    "booleanValue",
                    "floatValue",
                    "stringList",
                    "stringListHashmap",
                    "animalList",
                    "compositeObject",
                    "nullableCompositeObject",
                    "passwordList",
                    "phonenumber"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/ManyColumnsIdentifier-nullable-post"
                    },
                    "stringValue": {
                        "type": "string",
                        "nullable": false
                    },
                    "intValue": {
                        "type": "integer",
                        "nullable": false
                    },
                    "booleanValue": {
                        "type": "boolean",
                        "nullable": false
                    },
                    "floatValue": {
                        "type": "number",
                        "nullable": false
                    },
                    "nullableStringValue": {
                        "type": "string",
                        "nullable": true
                    },
                    "nullableIntValue": {
                        "type": "integer",
                        "nullable": true
                    },
                    "nullableBooleanValue": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "nullableFloatValue": {
                        "type": "number",
                        "nullable": true
                    },
                    "stringList": {
                        "$ref": "#/components/schemas/StringList-post"
                    },
                    "nullableStringList": {
                        "$ref": "#/components/schemas/StringList-nullable-post"
                    },
                    "stringListHashmap": {
                        "$ref": "#/components/schemas/StringListHashmap-post"
                    },
                    "nullableStringListHashmap": {
                        "$ref": "#/components/schemas/StringListHashmap-nullable-post"
                    },
                    "conflictingTypes": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CompositeObjectExample-post"
                            },
                            {
                                "$ref": "#/components/schemas/AnimalList-post"
                            },
                            {
                                "type": "integer"
                            },
                            {
                                "nullable": true,
                                "default": null
                            }
                        ],
                        "nullable": true
                    },
                    "animalList": {
                        "$ref": "#/components/schemas/AnimalList-post"
                    },
                    "nullableAnimalList": {
                        "$ref": "#/components/schemas/AnimalList-nullable-post"
                    },
                    "compositeObject": {
                        "$ref": "#/components/schemas/CompositeObjectExample-post"
                    },
                    "nullableCompositeObject": {
                        "$ref": "#/components/schemas/CompositeObjectExample-nullable-post"
                    },
                    "passwordList": {
                        "$ref": "#/components/schemas/StrongPasswordList-post"
                    },
                    "nullablePasswordList": {
                        "$ref": "#/components/schemas/StrongPasswordList-nullable-post"
                    },
                    "userIdentifier": {
                        "$ref": "#/components/schemas/UserIdentifier-nullable-post"
                    },
                    "mixedType": {
                        "$ref": "#/components/schemas/mixed"
                    },
                    "phonenumber": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DutchPhoneNumber-post"
                            },
                            {
                                "$ref": "#/components/schemas/BelgianPhoneNumber-post"
                            }
                        ],
                        "nullable": false
                    }
                }
            },
            "ManyColumnsIdentifier-get": {
                "type": "integer",
                "nullable": true
            },
            "ManyColumnsIdentifier-nullable-post": {
                "type": "integer",
                "nullable": true
            },
            "ManyColumnsIdentifier-post": {
                "type": "integer",
                "nullable": true
            },
            "NoValueEnum-post": {
                "enum": [
                    "RED",
                    "GREEN",
                    "BLUE"
                ],
                "type": "string"
            },
            "PartialInput-post": {
                "type": "object",
                "required": [
                    "input"
                ],
                "properties": {
                    "input": {
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "StringList-get": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "StringList-nullable-get": {
                "type": "array",
                "items": {
                    "type": "string",
                    "nullable": true
                },
                "nullable": true
            },
            "StringList-nullable-post": {
                "type": "array",
                "items": {
                    "type": "string",
                    "nullable": true
                },
                "nullable": true
            },
            "StringList-post": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "StringListHashmap-get": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/components/schemas/StringList-post"
                }
            },
            "StringListHashmap-nullable-get": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/StringList-post"
                    }
                },
                "nullable": true
            },
            "StringListHashmap-nullable-post": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/StringList-post"
                    }
                },
                "nullable": true
            },
            "StringListHashmap-post": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/components/schemas/StringList-post"
                }
            },
            "StrongPassword-nullable-post": {
                "pattern": "^(?=(.*[a-z]){1,})(?=(.*[A-Z]){1,})(?=(.*[0-9]){1,})(?=(.*[\\!@#\\$%\\^&\\*\\(\\)\\-_\\+\\.]){1,})[a-zA-Z0-9\\!@#\\$%\\^&\\*\\(\\)\\-_\\+\\.]{6,42}$",
                "type": "string",
                "format": "password",
                "nullable": true
            },
            "StrongPassword-post": {
                "pattern": "^(?=(.*[a-z]){1,})(?=(.*[A-Z]){1,})(?=(.*[0-9]){1,})(?=(.*[\\!@#\\$%\\^&\\*\\(\\)\\-_\\+\\.]){1,})[a-zA-Z0-9\\!@#\\$%\\^&\\*\\(\\)\\-_\\+\\.]{6,42}$",
                "type": "string",
                "format": "password"
            },
            "StrongPasswordList-get": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/StrongPassword-post"
                }
            },
            "StrongPasswordList-nullable-get": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/StrongPassword-nullable-post"
                },
                "nullable": true
            },
            "StrongPasswordList-nullable-post": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/StrongPassword-nullable-post"
                },
                "nullable": true
            },
            "StrongPasswordList-post": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/StrongPassword-post"
                }
            },
            "Throwable-get": {
                "type": "object",
                "required": [
                    "message",
                    "code"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "nullable": false
                    },
                    "code": {
                        "$ref": "#/components/schemas/mixed"
                    }
                }
            },
            "User-get": {
                "type": "object",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UserIdentifier-get"
                    }
                }
            },
            "User-nullable-get": {
                "type": "object",
                "required": [
                    "id"
                ],
                "nullable": true,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UserIdentifier-get"
                    }
                }
            },
            "User-post": {
                "type": "object",
                "required": [
                    "password",
                    "phoneNumber"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UserIdentifier-nullable-post"
                    },
                    "password": {
                        "$ref": "#/components/schemas/StrongPassword-post"
                    },
                    "phoneNumber": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DutchPhoneNumber-post"
                            },
                            {
                                "$ref": "#/components/schemas/BritishPhoneNumber-post"
                            }
                        ],
                        "nullable": false
                    }
                }
            },
            "UserIdentifier-get": {
                "type": "string",
                "format": "useridentifier",
                "pattern": "^[a-f0-9]{8}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{12}$"
            },
            "UserIdentifier-nullable-get": {
                "type": "string",
                "format": "useridentifier",
                "pattern": "^[a-f0-9]{8}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{12}$",
                "nullable": true
            },
            "UserIdentifier-nullable-post": {
                "type": "string",
                "format": "useridentifier",
                "pattern": "^[a-f0-9]{8}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{12}$",
                "nullable": true
            },
            "UserIdentifier-post": {
                "type": "string",
                "format": "useridentifier",
                "pattern": "^[a-f0-9]{8}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{4}\\-[a-f0-9]{12}$"
            },
            "ValidationException-get": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "mixed": {
                "nullable": true
            }
        }
    }
}