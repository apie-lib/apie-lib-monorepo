<apie-form-field-definition
    {% if isPrototyped() %}prototyped id="{{ property('name').getChildFormFieldName() }}"{% endif %}
    class="unhandled-single-input"
    name="{{ property('name').getChildFormFieldName() }}"
    types="{{ property('types').toArray() | join(',') }}"
    label="{{ translate(property('label')) }}"
>
{{ renderValidationError(property('value'), property('validationError')) }}
{% for validationCheck in property('validationChecks') %}
  <apie-constraint-check-definition
    {% if (validationCheck.message) %}message="{{ translate(validationCheck.message) }}"{% endif %}
    {% if (validation.inverseCheck) %}inverse-check{% endif %}
    {% if (validationCheck.minLength > 0) %}min-length="{{ validationCheck.minLength }}"{% endif %}
    {% if (validationCheck.maxLength > 0) %}max-length="{{ validationCheck.maxLength }}"{% endif %}
    {% if (validationCheck.pattern) %}pattern="{{ validationCheck.pattern }}"{% endif %}
    ></apie-constraint-check-definition>
{% endfor %}
</apie-form-field-definition>
<script>
((elm) => {
    elm.classList.remove('unhandled-single-input');
    elm.additionalSettings = {{ property('options') | safe_json_encode }}
})(document.querySelector('apie-form-field-definition.unhandled-single-input'));
</script>
