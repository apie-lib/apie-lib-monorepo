name: Split Monorepo

env:
    PAT: ${{ secrets.ACCESS_TOKEN }}

on:
  push:
    branches:
      - main
      - 1.0.0

    tags:
      - '*'

jobs:
  validate:
    name: Composer validate
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v4
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: pcov
          ini-values: pcov.directory=packages
      - uses: "ramsey/composer-install@v3"
        with:
          dependency-versions: "lowest"
      - name: Validate composer.json
        run: composer validate

  run-test-suite:
    name: Run tests (full suite)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php_version: ['8.1', '8.2', '8.3']
    steps:
      -
        uses: actions/checkout@v4
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php_version }}
          coverage: pcov
          ini-values: pcov.directory=packages
      - uses: "ramsey/composer-install@v3"
        with:
          dependency-versions: "lowest"
      - name: Run test suite
        run: vendor/bin/phpunit --coverage-php=coverage/${{ matrix.php_version }}.cov
      - name: Upload reports' artifacts 
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.run_id }}_artifact_${{ matrix.php_version }}
          if-no-files-found: ignore
          path: coverage
          retention-days: 1
  lint:
    name: Static code analysis
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v4
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: pcov
      - uses: "ramsey/composer-install@v3"
        with:
          dependency-versions: "lowest"
      - name: Run static code analysis
        run: vendor/bin/phpstan
    
  provide_packages_json:
    name: Determine all available packages
    runs-on: ubuntu-latest

    steps:
      -
        uses: actions/checkout@v4

      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          coverage: pcov

      - uses: "ramsey/composer-install@v3"
        with:
          dependency-versions: "lowest"

      -
        id: output_data
        run: echo "matrix=$(vendor/bin/monorepo-builder packages-json)" >> $GITHUB_OUTPUT

    outputs:
      matrix: ${{ steps.output_data.outputs.matrix }}

  run_phpunit_per_package:
    name: Run tests
    needs:
      - provide_packages_json
      - lint
      - validate

    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        #php_version: ['8.1', '8.2', '8.3', 'latest']
        php_version: ['8.3']
        package: ${{fromJson(needs.provide_packages_json.outputs.matrix)}}
    steps:
      -
        id: coverage
        uses: actions/checkout@v4
      -
        name: Run tests for ${{ matrix.package }} in php ${{ matrix.php_version }}
        run: composer install && bin/run-package-test ${{ matrix.php_version }} ${{ matrix.package }}
      - name: Upload reports' artifacts 
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.run_id }}_artifact_${{ matrix.php_version }}_${{ matrix.package }}
          if-no-files-found: ignore
          path: coverage
          retention-days: 1

  create_coverage:
    name: Merge code coverage
    needs:
      - run-test-suite
      - run_phpunit_per_package
    runs-on: ubuntu-latest
    steps:
      -   uses: shivammathur/setup-php@v2
          with:
            php-version: 8.3
            coverage: pcov
      -
        uses: actions/checkout@v4
      - name: Download reports' artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: /home/runner/coverage
          
      - name: debug downloaded_artifacts
        run: ls -l /home/runner/coverage
      -
        name: Merge all coverage files
        run: composer install && vendor/bin/phpcov merge --clover coverage.xml /home/runner/coverage
      - name: Upload merged report
        uses: actions/upload-artifact@v4
        with:
          name: coverage.xml
          path: coverage.xml

  split_monorepo:
    name: Push to git subtree
    needs:
      - provide_packages_json
      - create_coverage

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ${{fromJson(needs.provide_packages_json.outputs.matrix)}}

    steps:
      -
        uses: actions/checkout@v4

      # no tag
      - name: Pushes to apie-lib/${{ matrix.package }}, branch '${{ github.ref_name }}'
        if: "!startsWith(github.ref, 'refs/tags/')"
        uses: andstor/copycat-action@v3.2.4
        with:
          personal_token: ${{ secrets.ACCESS_TOKEN }}
          src_branch: '${{ github.ref_name }}'
          src_path: 'packages/${{ matrix.package }}/.'
          dst_path: /.
          dst_owner: apie-lib
          dst_repo_name: '${{ matrix.package }}'
          dst_branch: '${{ github.ref_name }}'
          clean: true

      # with tag
      -
        name: Pushes tag to apie-lib/${{ matrix.package }}
        if: "startsWith(github.ref, 'refs/tags/')"
        uses: "symplify/monorepo-split-github-action@2.1"
        with:
          tag: ${GITHUB_REF#refs/tags/}
          package_directory: 'packages/${{ matrix.package }}'
          repository_organization: 'apie-lib'
          repository_name: '${{ matrix.package }}'
          user_name: "Pieter Jordaan"
          user_email: "pieter_jordaan@hotmail.com"

      


